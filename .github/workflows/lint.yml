name: "Linting"

on:
    pull_request:
    push:
        branches:
            - main

env:
    fail-fast: true

permissions:
    contents: read

jobs:
    linters:
        name: Linters
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ["8.4"]

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v5

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: intl
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2

            - name: "Set composer cache directory"
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: "Cache composer"
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: "Install dependencies"
              run: composer install --ansi --no-interaction --no-progress

            - name: Lint YAML files
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:yaml config --parse-tags

            - name: Lint Twig templates
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:twig templates --env=prod

            - name: Lint XLIFF translation files
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:xliff translations

            - name: Lint translation contents
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:translations

            - name: Lint Parameters and Services
              if: always() && steps.install.outcome == 'success'
              run: ./bin/console lint:container --no-debug

            - name: Lint Composer config
              if: always() && steps.install.outcome == 'success'
              run: composer validate --strict

            - name: Check if any dependencies are compromised
              if: always() && steps.install.outcome == 'success'
              run: composer audit

            - name: Lint PHP Code (PHP-CS-Fixer)
              if: always() && steps.install.outcome == 'success'
              run: vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run

            - name: Run PHPStan
              if: always() && steps.install.outcome == 'success'
              run: ./vendor/bin/phpstan analyze
